{"version":3,"sources":["components/Button_Start/styledButtonStart.js","styles/GlobalStyle.js","components/Button_Start/ButtonStart.jsx","pages/StartPages.jsx","components/Field/StyledField.js","components/square/styledSquare.js","components/square/square.jsx","components/Field/Field.jsx","components/Game/Game.jsx","pages/GamePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","WrapperButton","div","P","p","GlobalStyle","createGlobalStyle","props","whiteColor","ButtonStart","to","StartPage","WrapperField","WrapperSq","H1","h1","Container","ModalWindow","isOpenModal","H3Modal","h3","StartAgain","TextInsideButton","img","Sq","Square","React","memo","hand","value","onClick","Field","useState","isFirst","setIsfirst","Array","fill","arrField","setArr","finish","whoIsWinner","finishGame","setFinishGame","_onClick","i","sq","slice","useEffect","WinnerLine","0","1","2","3","4","5","6","7","find","el","index","Object","values","isWinner","includes","TryAgain","useCallback","Game","GamePage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bae6a84.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\"\r\nexport const Button = styled.button`\r\n   text-align: center;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #eae0c2;\r\n   border-radius: 5px;\r\n   outline: none;\r\n   border: none;\r\n   cursor: pointer;\r\n`\r\nexport const WrapperButton = styled.div`\r\nposition: fixed;\r\nwidth: 200px;\r\nheight: 100px;\r\ntop: 50%;\r\nleft: 50%;\r\nmargin-right: -50%;\r\ntransform: translate(-50%, -50%);\r\n`\r\nexport const P = styled.p`\r\nfont-size: 16px;\r\n`","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n   background-color: ${(props) => (props.whiteColor ? \"red\" : \"#900020\")};\r\n  }\r\n\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport {Button, WrapperButton, P} from \"./styledButtonStart\"\r\nimport {GlobalStyle} from \"../../styles/GlobalStyle\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst ButtonStart = () =>{\r\n\r\n   return (\r\n      <>\r\n      <GlobalStyle/>\r\n      <WrapperButton>\r\n         <Link to=\"/Game\">\r\n            <Button><P>S T A R T</P></Button>\r\n         </Link>\r\n      </WrapperButton>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ButtonStart","import React, { useState } from \"react\";\r\nimport ButtonStart from \"../components/Button_Start/ButtonStart\"\r\n\r\n\r\nconst StartPage = () =>{\r\n\r\n   return(\r\n      <>\r\n      <ButtonStart/>\r\n      </>\r\n   )\r\n}\r\nexport default StartPage","import styled from \"styled-components\";\r\n\r\nexport const WrapperField = styled.div`\r\nwidth: 300px;\r\nborder: 1px solid black;\r\nmargin: 0 auto;\r\n`\r\nexport const WrapperSq = styled.div`\r\ndisplay: flex;\r\n`\r\n\r\nexport const H1 = styled.h1`\r\ntext-align: center;\r\n`\r\n\r\nexport const Container = styled.div`\r\nwidth: 900px;\r\nmargin: 0 auto;\r\n`\r\nexport const ModalWindow = styled.div`\r\ncursor: pointer;\r\n visibility: ${({isOpenModal})=> isOpenModal ? \"visible\" : 'hidden'};\r\nposition: fixed;\r\ndisplay: flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items: center;\r\ntop: ${({isOpenModal})=> isOpenModal ? \"50%\" : '-50%'};\r\nleft:50%;\r\ntransform: translate(-50%, -50%);\r\nbackground-color:#ced3db;\r\nz-index: 1;\r\nheight: 30%;\r\nwidth: 30%;\r\ntransition: all 0.7s ease-in-out;\r\n`\r\n\r\nexport const H3Modal = styled.h3`\r\ntext-align: center;\r\n`\r\n\r\nexport const StartAgain = styled.div`\r\nborder: 2px solid #900020;\r\nwidth: 200px;\r\nheight: 50px;\r\n`\r\nexport const TextInsideButton  = styled.p`\r\ntext-align: center;\r\nfont-weight: bold;\r\n`;\r\n\r\nexport const BoxOFSmile = styled.div`\r\nwidth: 50px;\r\nmargin-top: 10px;\r\nheight: 50px;\r\n`\r\n\r\nexport const ImgSmile = styled.img`\r\nwidth: 100%;\r\nheight: 100%:\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Sq = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nflex-basis: 98px;\r\nheight: 100px;\r\nborder: 1px solid black;\r\ncursor: pointer;\r\n-webkit-transition:background-color 1s;\r\n&:hover{\r\n   background-color: grey;\r\n}\r\n`\r\n\r\nexport const P = styled.p`\r\nfont-size: 18px;\r\nfont-weight: bold;\r\n`\r\nexport const WrapperSq = styled.div`\r\ndisplay: flex;\r\n`","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {Sq, WrapperSq, P} from \"./styledSquare\"\r\nimport {useRenderCount} from \"../hooks/RenderCount\"\r\n\r\n\r\n\r\nconst Square = React.memo( ({hand, value} ) => {\r\n\r\n   return(\r\n      <>\r\n      <Sq onClick={hand}><P>{value}</P> </Sq>\r\n      </>\r\n   )\r\n})\r\n\r\n\r\nexport default Square","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport {WrapperField, \r\n   WrapperSq,\r\n   H1, \r\n   Container, \r\n   ModalWindow, \r\n   H3Modal, \r\n   StartAgain, \r\n   TextInsideButton} from \"./StyledField\"\r\nimport Square from \"../../components/square/square\"\r\n\r\nconst Field = () =>{\r\n   const [isFirst, setIsfirst] = useState(true)   // Определяем чей ход\r\n   const [arrField, setArr] = useState(Array(9).fill(null)) //   Определяем игровое поле\r\n   const [finishGame, setFinishGame] = useState({finish:false, whoIsWinner: \"\"}) // Определяем конец игры и победителя\r\n\r\n   \r\n\r\n     const _onClick =   (i) =>{\r\n      const sq = arrField.slice()\r\n      if(!sq[i] && !finishGame.finish){\r\n         sq[i] =  isFirst ? 'X' : \"O\"\r\n         setIsfirst(!isFirst)\r\n         setArr(sq)\r\n      }\r\n      \r\n     }\r\n\r\n     useEffect(()=>{\r\n      //   Заполняем каждую игровую линию отыгранным \"Square\"\r\n        let objLines = [\r\n        {0: `${arrField[0]}${arrField[1]}${arrField[2]}`},\r\n        {1: `${arrField[3]}${arrField[4]}${arrField[5]}`},\r\n        {2: `${arrField[6]}${arrField[7]}${arrField[8]}`},\r\n        {3: `${arrField[0]}${arrField[3]}${arrField[6]}`},\r\n        {4: `${arrField[1]}${arrField[4]}${arrField[7]}`},\r\n        {5: `${arrField[2]}${arrField[5]}${arrField[8]}`},\r\n        {6: `${arrField[0]}${arrField[4]}${arrField[8]}`},\r\n        {7: `${arrField[2]}${arrField[4]}${arrField[6]}`},\r\n      ]\r\n\r\n   let WinnerLine = objLines.find((el, index) => el[index] === \"XXX\" || el[index] === \"OOO\")    //   Находим отыгранную линию \r\n\r\n   if(WinnerLine){\r\n      // Если такова есть устанавливываем стейт для дальнейшей отрисовки \r\n      let [isWinner] = Object.values(WinnerLine)   // получаем значение из Winnerline\r\n      setFinishGame({\r\n         finish: true, \r\n         whoIsWinner: isWinner === \"XXX\" ? \"Player X is winner, Congratulations!\" :\"Player O is winner, Congratulations!\" })\r\n      \r\n   }else if(!arrField.includes(null) && !WinnerLine){\r\n      // Если таковой нет.....\r\n   setFinishGame({\r\n       finish:true,\r\n       whoIsWinner:\" There is Draw, I recommend that you play again\" })\r\n}\r\n   }, [arrField])\r\n\r\n\r\n\r\n     const TryAgain = useCallback(()=>{\r\n   //   Сброс!!\r\n   setFinishGame({finish:false})\r\n   setIsfirst(true)\r\n   setArr(Array(9).fill(null))\r\n     },[setArr]) \r\n\r\n\r\n   return (\r\n      <>\r\n      <Container>\r\n      <H1> Player is moving now {isFirst ? \"X\" : \"O\"} </H1>\r\n      <WrapperField>\r\n         <WrapperSq>\r\n         <Square hand={()=>_onClick(0)}  value={arrField[0]}/>\r\n         <Square  hand={()=>_onClick(1)} value={arrField[1]}/>\r\n         <Square hand={()=>_onClick(2)} value={arrField[2]} />\r\n         </WrapperSq>\r\n\r\n         <WrapperSq>\r\n         <Square hand={()=>_onClick(3)} value={arrField[3]}/>\r\n         <Square hand={()=>_onClick(4)} value={arrField[4]}/>\r\n         <Square hand={()=>_onClick(5)} value={arrField[5]}/>\r\n         </WrapperSq>\r\n\r\n         <WrapperSq>\r\n         <Square hand={()=>_onClick(6)} value={arrField[6]} />\r\n         <Square hand={()=>_onClick(7)} value={arrField[7]} />\r\n         <Square hand={()=>_onClick(8)} value={arrField[8]} />\r\n         </WrapperSq>\r\n      </WrapperField>\r\n      <ModalWindow isOpenModal ={finishGame.finish}>\r\n      <H3Modal>{finishGame.whoIsWinner} </H3Modal>\r\n   <StartAgain onClick={TryAgain}>\r\n      <TextInsideButton>Do you wanna try again?</TextInsideButton>\r\n   </StartAgain>\r\n      </ModalWindow>\r\n      </Container>\r\n      \r\n      </>\r\n   )\r\n}\r\n\r\nexport default Field","import React from \"react\";\r\nimport Field from \"../Field/Field\"\r\nimport {GlobalStyle} from \"../../styles/GlobalStyle\"\r\n\r\nconst Game = () =>{\r\n\r\n   return (\r\n      <>\r\n      <GlobalStyle/>\r\n      <Field/>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Game","import React, { useState } from \"react\";\r\nimport Game from \"../components/Game/Game\"\r\n\r\nconst GamePage = () =>{\r\n\r\n   return(\r\n      <>\r\n      <Game/>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GamePage","import StartPage from \"./pages/StartPages\"\nimport GamePage from \"./pages/GamePage\"\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\nreturn (\n  <>\n  <BrowserRouter>\n  <Switch>\n    <Route exact path=\"/tic-tac-toe\">\n      <StartPage/>\n    </Route>\n    <Route exact path=\"/Game\">\n      <GamePage />\n    </Route>\n  </Switch>\n  </BrowserRouter>\n\n  </>\n)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}